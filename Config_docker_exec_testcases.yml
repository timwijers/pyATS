---
- hosts: dockerHost
  become: true


  vars:
    - container_name: pyats_cont11

  tasks:

#    - name: Update/Upgrade dependencies
#      apt: update_cache=yes upgrade=yes

    - name: Install python-apt using apt
      apt: name=python-apt state=latest update_cache=yes force_apt_get=yes

    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: ['docker.io', 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip',
             'virtualenv', 'python3-setuptools',  'python3-docker', 'python3-bs4']


    - name: Install Docker Module for Python
      pip: name=docker

    - name: Uninstall ssl_match_hostname
      pip: name=python-backports.ssl-match-hostname state=absent

    - name: Install ssl_match_hostname apt module for Python
      apt: name=python-backports.ssl-match-hostname state=latest update_cache=yes force_apt_get=yes


    - name: Create pyATS Container
      docker_container:
        name: "{{ container_name }}"
        image: ciscotestautomation/pyats:latest
        ports: 80:80
        stop_timeout: 300
        detach: true
        command:
          - sleep infinity

    - name: update/upgrade dependencies of docker container
      shell: docker exec -it "{{ container_name }}" bash -c "apt-get update -y ; apt-get upgrade -y"

    - name: install Git on docker container
      shell: docker exec -it "{{ container_name }}" apt-get install git -y

   #- name: remove preexisting repo's
   #   shell: docker exec -it "{{ container_name }}" rm -r /pyats/pyATS  2>/dev/null

    - name: clone pyATs repository to docker container
      shell: docker exec -it "{{ container_name }}" git clone http://github.com/timwijers/pyATS

    - name: update pyATS repo in docker container
      shell: docker exec -it "{{ container_name }}" bash -c "cd /pyats/pyATS ;
             git pull http://github.com/timwijers/pyATS"

    - name: Install apache webserver on docker container
      shell: docker exec -it "{{ container_name }}" bash -c "yes | apt-get install apache2 ; service apache2 start"

   # - name: remove preexisting ssh keys
   #   shell: docker exec -it "{{ container_name }}" rm -r /root/.ssh/known_hosts 2>/dev/null

    - name: execute configuration file in docker container
      shell: docker exec -it "{{ container_name }}" bash -c "source bin/activate ; cd /pyats/pyATS ;
             pyats run job jobfile.py > result.txt"
      ignore_errors: yes

    - name: save results to webserver in docker container
      shell: docker exec -it "{{ container_name }}" cp /pyats/pyATS/result.txt /var/www/html

#    - name: kill Docker container
#      shell: docker stop "{{ container_name }}"

#    - name: clean Docker host
#      shell: yes | docker system prune


